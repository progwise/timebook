### This file was generated by Nexus Schema
### Do not make changes to this file directly

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Mutation {
  """
  Create a new WorkHour
  """
  createWorkHour(
    comment: String
    date: Date!

    """
    Duration of the work hour in minutes
    """
    duration: Int!
    taskId: ID!
  ): WorkHour!

  """
  Create a new project
  """
  projectCreate(data: ProjectInput!): Project!

  """
  Delete a project
  """
  projectDelete(
    """
    id of the project
    """
    id: ID!
  ): Project!

  """
  Update a project
  """
  projectUpdate(
    data: ProjectInput!

    """
    id of the project
    """
    id: ID!
  ): Project!

  """
  Create a new Task
  """
  taskCreate(data: TaskInput!): Task!

  """
  Delete a task
  """
  taskDelete(
    """
    id of the task
    """
    id: ID!
  ): Task!

  """
  Accept an invite to a team
  """
  teamAcceptInvite(
    """
    Invite key of the team
    """
    inviteKey: String!
  ): Team!

  """
  Create a new team
  """
  teamCreate(data: TeamInput!): Team!

  """
  Delete a new team
  """
  teamDelete(
    """
    Id of the team
    """
    id: ID!
  ): Team!

  """
  Update a new team
  """
  teamUpdate(
    data: TeamInput!

    """
    Id of the team
    """
    id: ID!
  ): Team!
}

type Project {
  endDate: Date

  """
  identifies the project
  """
  id: ID!
  startDate: Date
  tasks: [Task!]!
  title: String!
  workHours: [WorkHour!]!
}

input ProjectInput {
  end: Date
  start: Date
  title: String!
}

type Query {
  """
  Returns a single project
  """
  project(
    """
    Identifier for the project
    """
    projectId: ID!
  ): Project!

  """
  Returns a list of all projects
  """
  projects: [Project!]!

  """
  Return a team by an id
  """
  team(
    """
    Id of the team
    """
    id: ID!
  ): Team!

  """
  Return a team by a slug
  """
  teamBySlug(
    """
    slug of the team
    """
    slug: String!
  ): Team!

  """
  Return all teams
  """
  teams: [Team!]!

  """
  Returns a single user
  """
  user(
    """
    Identifier for the user
    """
    userId: ID!
  ): User!
  users: [User!]!
}

type Task {
  """
  Identifies the task
  """
  id: ID!
  project: Project!

  """
  The user can identify the task in the UI
  """
  title: String!
  workhours: [WorkHour!]!
}

input TaskInput {
  projectId: Int!
  title: String!
}

type Team {
  """
  Identifier of the team
  """
  id: ID!
  inviteKey: String!

  """
  Slug that is used in the team URL
  """
  slug: String!

  """
  Color theme of the team
  """
  theme: Theme!

  """
  Title of the team
  """
  title: String!
}

input TeamInput {
  """
  Slug that is used in the team URL
  """
  slug: String!

  """
  Color theme of the team
  """
  theme: Theme

  """
  Title of the team
  """
  title: String!
}

enum Theme {
  BLUE
  GRAY
  GREEN
  INDIGO
  PINK
  PURPLE
  RED
  YELLOW
}

"""
A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Time

type User {
  id: ID!
  image: String
  name: String
}

type WorkHour {
  comment: String
  date: Date!

  """
  Duration of the work hour in minutes
  """
  duration: Int!

  """
  Identifies the work hour
  """
  id: ID!
  project: Project!
}
